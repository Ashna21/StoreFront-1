@model StoreFront.Models.SearchViewModel

<div>
    <input type="text" value="0" id="Added"/>
</div>

@using (Html.BeginForm("Search", "ProductSearch", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SearchViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SearchText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SearchText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SearchText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (Model.Results.Any())
{
    foreach (var result in Model.Results)
    {
        @result.Name
        @result.Price.ToString()
        @result.ImageFile
        <input class="cartButton" type="button" value="Add to cart" onclick="addToCart(@result.Id)"/>
        <br/>
        @*@Ajax.ActionLink("Add to Cart", "AddToCart", new { id = result.Id }, new AjaxOptions() { HttpMethod = "Post", UpdateTargetId = "Added" })*@
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            var x = 1000;
        });

        var addToCart = function(idFromButton){

            $.post('/ProductSearch/AddToCart', { id: idFromButton },
                function (data) {

                    $("#itemsInCart").html(data.Quantity);
                    $("#cartPrice").html("$" + data.TotalPrice);
                    alert(data.TransactionMessage);

                    $("#userName").fadeToggle();

                }
            );

        }

    </script>
}

